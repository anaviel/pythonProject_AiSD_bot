import sqlite3
import os
from telebot import types
from bot_start import bot

database = sqlite3.connect('rasp.db', check_same_thread=False)
cursor = database.cursor()

# —Ç–æ–∫–µ–Ω –¥–ª—è PayMaster
#payment_token = '1744374395:TEST:76270d537750431c42bb'

# —Ç–æ–∫–µ–Ω –¥–ª—è –ÆKassa
payment_token = '381764678:TEST:71355'


# —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
def personal_account(message):
    cursor = database.cursor()
    user_id = message.from_user.id
    cursor.execute("SELECT visitor FROM subscription_inf WHERE id = ?", (user_id,))
    name = ''.join(cursor.fetchone())
    cursor.execute("SELECT subscription FROM subscription_inf WHERE visitor = ?",
                   (name,))
    result = cursor.fetchone()[0]
    cursor.execute("SELECT date, napr FROM classes WHERE visitor = ?", (name,))
    dates_napr_ = cursor.fetchall()
    dates_napr = []
    for d_n in dates_napr_:
        dates_napr.append(d_n)
    classes = ''
    for d_n in dates_napr:
        date = d_n[0]
        napr = d_n[1]
        classes = classes + '\n' + '    ' + date + '  ' + napr + '\n'
    image_file = os.listdir("images")
    if image_file:
        image_path = os.path.join("images", image_file[0])
        with open(image_path, 'rb') as photo:
            bot.send_photo(message.chat.id, photo,
                           caption=f'ü§ç–£–≤–∞–∂–∞–µ–º–∞—è, {name}!\n\n    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–∏–π –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –í–∞—à–µ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞: {result}\n\nüéÄ–ó–∞–Ω—è—Ç–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –í—ã –∑–∞–ø–∏—Å–∞–Ω—ã:\n{classes}')
    cursor.close()


# —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–º–æ—â—å"
def help(message):
    bot.send_message(message.chat.id, '''–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–Ω–æ–ø–∫–∞–º–∏:
            \n\nü§ç¬´–ó–∞–ø–∏—Å–∞—Ç—å—Å—è¬ªü§ç 
        –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É, –í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤—ã–±—Ä–∞—Ç—å —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å –¥–µ–Ω—å –¥–ª—è –∑–∞–ø–∏—Å–∏, –ø–æ—Å–ª–µ —á–µ–≥–æ –í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∂–µ–ª–∞–µ–º–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.
        –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥–µ—Ç–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ, –ø—Ä–∏ —ç—Ç–æ–º —Å–æ —Å—á—ë—Ç–∞ –í–∞—à–µ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω–æ –æ–¥–Ω–æ –∑–∞–Ω—è—Ç–∏–µ. 
            \n\nü§ç¬´–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ¬ªü§ç 
        –î–∞–Ω–Ω–∞—è –æ–ø—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –æ—Ç–º–µ–Ω—É –∑–∞–ø–∏—Å–∏. –í—ã —É–≤–∏–¥–∏—Ç–µ –ø–µ—Ä–µ—á–µ–Ω—å –∑–∞–Ω—è—Ç–∏–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã, –∏ —Å–º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –ª—é–±–æ–µ –∏–∑ –Ω–∏—Ö –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏. 
        –ü—Ä–∏ —ç—Ç–æ–º –Ω–∞ —Å—á—ë—Ç –í–∞—à–µ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ –æ–¥–Ω–æ –∑–∞–Ω—è—Ç–∏–µ.
            \n\nü§ç¬´–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç¬ªü§ç 
        –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –∑–∞–Ω—è—Ç–∏–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å, –∞ —Ç–∞–∫–∂–µ –±–∞–ª–∞–Ω—Å –í–∞—à–µ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞. 
        –ï—Å–ª–∏ –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø–æ—Å–µ—Ç–∏—Ç—å —Å—Ç—É–¥–∏—é –≤–ø–µ—Ä–≤—ã–µ, —Ç–æ –¥–ª—è –í–∞—Å –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ñ–æ—Ä–º–∏—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ. 
            ''')


# —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∞–¥–º–∏–Ω–æ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç"
def update_price_list(message):
    file_info = bot.get_file(message.photo[-1].file_id)
    file_name = f"images/{file_info.file_id}.jpg"
    if os.listdir("images"):
        os.remove(os.path.join("images", os.listdir("images")[0]))
    downloaded_file = bot.download_file(file_info.file_path)
    with open(file_name, 'wb') as new_file:
        new_file.write(downloaded_file)
    bot.send_message(message.chat.id, "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω.")


# —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∞–¥–º–∏–Ω–æ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã"
def subscription(message):
    cursor.execute("SELECT * FROM subscription_inf")
    print(cursor.fetchall())
    markup_subscription = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç', callback_data='replenish_subscription')
    markup_subscription.add(button1)
    cursor.execute("SELECT visitor FROM subscription_inf WHERE subscription > 0")
    kol = len(cursor.fetchall())
    bot.send_message(message.chat.id, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤: {kol}', reply_markup=markup_subscription)


def replenish_subscription(message, callback):
    try:
        phone_number, visitor, kol = message.text.split(', ')
        cursor.execute("SELECT subscription FROM subscription_inf WHERE phone_number = ? AND visitor = ?",
                       (phone_number, visitor))
        result = cursor.fetchone()
        if result is None:
            bot.send_message(message.chat.id, "–ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            new_subscription = result[0] + int(kol)
            cursor.execute("UPDATE subscription_inf SET subscription = ? WHERE visitor = ?",
                           (new_subscription, visitor))
            bot.send_message(message.chat.id, "–ê–±–æ–Ω–µ–º–µ–Ω—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω.")
        database.commit()
        cursor.execute("SELECT * FROM subscription_inf")
        print(cursor.fetchall())
    except:
        bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        callback_replenish_subscription(callback)


@bot.callback_query_handler(func=lambda callback: 'replenish_subscription' in callback.data)
def callback_replenish_subscription(callback):
    bot.send_message(callback.message.chat.id,
                     '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –§–ò–û –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è, –ø–æ–ø–æ–ª–Ω–∏–≤—à–µ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç, –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ '
                     '–ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.\n\n'
                     '–ü—Ä–∏–º–µ—Ä: <b><i>+79213421431, –ò–≤–∞–Ω–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞, 30</i></b>',
                     parse_mode='HTML')
    bot.register_next_step_handler(callback.message, replenish_subscription, callback)


# —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ"
def trial_training(message):
    bot.send_invoice(message.chat.id, '–ü—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ', '–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è', 'invoice', payment_token, 'RUB',
                     [types.LabeledPrice('–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è', 400 * 100)])


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
@bot.message_handler(content_types=['successful_payment'])
def successful_payment(message):
    new_user_id = message.chat.id
    cursor.execute("UPDATE subscription_inf SET prob_inf = '+' WHERE id = ?", (new_user_id,))
    bot.send_message(message.chat.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –ñ–¥—ë–º –≤–∞—Å –Ω–∞ –ø—Ä–æ–±–Ω–æ–º –∑–∞–Ω—è—Ç–∏–∏ –≤ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏!')
